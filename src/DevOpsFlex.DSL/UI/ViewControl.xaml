<!--The important is that the DataContext of this control is assigned with the root of the DomainModel generated from the .dsl
        -->
<UserControl x:Class="DevOpsFlex.DSL.UI.ViewControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="558" 
             TextOptions.TextFormattingMode="Display"
             xmlns:my="clr-namespace:DevOpsFlex.DSL.UI;assembly=DevOpsFlex.DSL.UI" >

    <!-- All the graphical styles are in a separate resource dictionary -->
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary 
                  Source="Styles.xaml">
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <!-- And this style is applied to the View for instance-->
    <UserControl.Style>
        <StaticResourceExtension ResourceKey="ViewStyle"/>
    </UserControl.Style>

    <UserControl.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Delete" Executed="Delete_Execute"></CommandBinding>
    </UserControl.CommandBindings>

    
    <!-- Avoids the "Bluring" effect in WPF -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition  Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Label Grid.Column="0" Grid.Row="0" Style="{StaticResource LabelStyle}">Model name</Label>
        <TextBox Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding Path=Name}" HorizontalContentAlignment="Stretch" Margin="10"></TextBox>
        <Label Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" Style="{StaticResource LabelStyle}">Elements</Label>

        <!-- Toolbar to control Adding and Deleting elements -->
        <ToolBar Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Background="Transparent">
            <Button ToolTip="Add a new ModelElement" SnapsToDevicePixels="True" Click="AddButton_Click">
                    <Image Source="/DevOpsFlex.DSL.UI;component/Images/AddTableHS.png" Stretch="None"></Image>
            </Button>
            <Button  ToolTip="Delete the selected ModelElements" SnapsToDevicePixels="True" Command="ApplicationCommands.Delete">
                <Image Source="/DevOpsFlex.DSL.UI;component/Images/DeleteHS.png" Stretch="None"></Image>
            </Button>
        </ToolBar>

        <!-- Data grid to present the elements-->
        <DataGrid Name="elementsGrid" Grid.Column="2" Grid.Row="2" ItemsSource="{Binding Path=ExampleElements}" Style="{StaticResource GridStyle}" ClipboardCopyMode="IncludeHeader">
            <DataGrid.CommandBindings>
                <!-- We must override this CommandBinding because the normal DeleteCommand for a DataGrid does not perform the Delete
                     inside a modeling transaction -->
                <CommandBinding Command="ApplicationCommands.Delete" Executed="Delete_Execute"></CommandBinding>
            </DataGrid.CommandBindings>
        </DataGrid>
    </Grid>


</UserControl>
